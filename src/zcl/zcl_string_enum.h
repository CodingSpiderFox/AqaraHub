#ifndef _ZCL_ZCL_STRING_ENUM_H_
#define _ZCL_ZCL_STRING_ENUM_H_
#include "string_enum.h"
#include "zcl/zcl.h"

template <>
struct StringEnumHelper<zcl::ZclFrameType> {
  static std::map<zcl::ZclFrameType, std::string> lookup() {
    return {{zcl::ZclFrameType::Global, "Global"},
            {zcl::ZclFrameType::Local, "Local"},
            {zcl::ZclFrameType::Reserved1, "Reserved1"},
            {zcl::ZclFrameType::Reserved2, "Reserved2"}};
  }
};

template <>
struct StringEnumHelper<zcl::ZclDirection> {
  static std::map<zcl::ZclDirection, std::string> lookup() {
    return {{zcl::ZclDirection::ClientToServer, "ClientToServer"},
            {zcl::ZclDirection::ServerToClient, "ServerToClient"}};
  }
};

template <>
struct StringEnumHelper<zcl::DataType> {
  static std::map<zcl::DataType, std::string> lookup() {
    return {{zcl::DataType::nodata, "nodata"},
            {zcl::DataType::data8, "data8"},
            {zcl::DataType::data16, "data16"},
            {zcl::DataType::data24, "data24"},
            {zcl::DataType::data32, "data32"},
            {zcl::DataType::data40, "data40"},
            {zcl::DataType::data56, "data56"},
            {zcl::DataType::data64, "data64"},
            {zcl::DataType::_bool, "bool"},
            {zcl::DataType::map8, "map8"},
            {zcl::DataType::map16, "map16"},
            {zcl::DataType::map24, "map24"},
            {zcl::DataType::map32, "map32"},
            {zcl::DataType::map40, "map40"},
            {zcl::DataType::map48, "map48"},
            {zcl::DataType::map56, "map56"},
            {zcl::DataType::map64, "map64"},
            {zcl::DataType::uint8, "uint8"},
            {zcl::DataType::uint16, "uint16"},
            {zcl::DataType::uint24, "uint24"},
            {zcl::DataType::uint32, "uint32"},
            {zcl::DataType::uint40, "uint40"},
            {zcl::DataType::uint48, "uint48"},
            {zcl::DataType::uint56, "uint56"},
            {zcl::DataType::uint64, "uint64"},
            {zcl::DataType::int8, "int8"},
            {zcl::DataType::int16, "int16"},
            {zcl::DataType::int24, "int24"},
            {zcl::DataType::int32, "int32"},
            {zcl::DataType::int40, "int40"},
            {zcl::DataType::int48, "int48"},
            {zcl::DataType::int56, "int56"},
            {zcl::DataType::int64, "int64"},
            {zcl::DataType::enum8, "enum8"},
            {zcl::DataType::enum16, "enum16"},
            {zcl::DataType::semi, "semi"},
            {zcl::DataType::single, "single"},
            {zcl::DataType::_double, "double"},
            {zcl::DataType::octstr, "octstr"},
            {zcl::DataType::string, "string"},
            {zcl::DataType::octstr16, "octstr16"},
            {zcl::DataType::string16, "string16"},
            {zcl::DataType::array, "array"},
            {zcl::DataType::_struct, "struct"},
            {zcl::DataType::set, "set"},
            {zcl::DataType::bag, "bag"},
            {zcl::DataType::ToD, "ToD"},
            {zcl::DataType::date, "date"},
            {zcl::DataType::UTC, "UTC"},
            {zcl::DataType::clusterId, "clusterId"},
            {zcl::DataType::attribId, "attribId"},
            {zcl::DataType::bacOID, "bacOID"},
            {zcl::DataType::EUI64, "EUI64"},
            {zcl::DataType::key128, "key128"},
            {zcl::DataType::unk, "unk"}};
  }
};

template <>
struct StringEnumHelper<zcl::ZclClusterId> {
  static std::map<zcl::ZclClusterId, std::string> lookup() {
    return {
        {zcl::ZclClusterId::Basic, "Basic"},
        {zcl::ZclClusterId::PowerConfiguration, "PowerConfiguration"},
        {zcl::ZclClusterId::DeviceTemperatureConfiguration,
         "DeviceTemperatureConfiguration"},
        {zcl::ZclClusterId::Identify, "Identify"},
        {zcl::ZclClusterId::Groups, "Groups"},
        {zcl::ZclClusterId::Scenes, "Scenes"},
        {zcl::ZclClusterId::OnOff, "OnOff"},
        {zcl::ZclClusterId::OnOffSwitchConfiguration,
         "OnOffSwitchConfiguration"},
        {zcl::ZclClusterId::LevelControl, "LevelControl"},
        {zcl::ZclClusterId::Alarms, "Alarms"},
        {zcl::ZclClusterId::Time, "Time"},
        {zcl::ZclClusterId::RSSILocation, "RSSILocation"},
        {zcl::ZclClusterId::AnalogInput, "AnalogInput"},
        {zcl::ZclClusterId::AnalogOutput, "AnalogOutput"},
        {zcl::ZclClusterId::AnalogValue, "AnalogValue"},
        {zcl::ZclClusterId::BinaryInput, "BinaryInput"},
        {zcl::ZclClusterId::BinaryOutput, "BinaryOutput"},
        {zcl::ZclClusterId::BinaryValue, "BinaryValue"},
        {zcl::ZclClusterId::MultistateInput, "MultistateInput"},
        {zcl::ZclClusterId::MultistateOutput, "MultistateOutput"},
        {zcl::ZclClusterId::MultistateValue, "MultistateValue"},
        {zcl::ZclClusterId::Commissioning, "Commissioning"},
        {zcl::ZclClusterId::Partition, "Partition"},
        {zcl::ZclClusterId::OTA, "OTA"},
        {zcl::ZclClusterId::PowerProfile, "PowerProfile"},
        {zcl::ZclClusterId::EN50523ApplianceControl, "EN50523ApplianceControl"},
        {zcl::ZclClusterId::PollControl, "PollControl"},
        {zcl::ZclClusterId::MobileDeviceConfiguration,
         "MobileDeviceConfiguration"},
        {zcl::ZclClusterId::NeighborCleaning, "NeighborCleaning"},
        {zcl::ZclClusterId::NearestGateway, "NearestGateway"},
        {zcl::ZclClusterId::ShadeConfiguration, "ShadeConfiguration"},
        {zcl::ZclClusterId::DoorLock, "DoorLock"},
        {zcl::ZclClusterId::WindowCovering, "WindowCovering"},
        {zcl::ZclClusterId::PumpConfigurationAndControl,
         "PumpConfigurationAndControl"},
        {zcl::ZclClusterId::Thermostat, "Thermostat"},
        {zcl::ZclClusterId::FanControl, "FanControl"},
        {zcl::ZclClusterId::DehumidificationControl, "DehumidificationControl"},
        {zcl::ZclClusterId::ThermostatUserInterfaceConfiguration,
         "ThermostatUserInterfaceConfiguration"},
        {zcl::ZclClusterId::ColorControl, "ColorControl"},
        {zcl::ZclClusterId::BallastConfiguration, "BallastConfiguration"},
        {zcl::ZclClusterId::IlluminanceMeasurement, "IlluminanceMeasurement"},
        {zcl::ZclClusterId::IlluminanceLevelSensing, "IlluminanceLevelSensing"},
        {zcl::ZclClusterId::TemperatureMeasurement, "TemperatureMeasurement"},
        {zcl::ZclClusterId::PressureMeasurement, "PressureMeasurement"},
        {zcl::ZclClusterId::FlowMeasurement, "FlowMeasurement"},
        {zcl::ZclClusterId::RelativeHumidityMeasurement,
         "RelativeHumidityMeasurement"},
        {zcl::ZclClusterId::OccupancySensing, "OccupancySensing"},
        {zcl::ZclClusterId::IASZone, "IASZone"},
        {zcl::ZclClusterId::IASACE, "IASACE"},
        {zcl::ZclClusterId::IASWD, "IASWD"},
        {zcl::ZclClusterId::GenericTunnel, "GenericTunnel"},
        {zcl::ZclClusterId::BACnetProtocolTunnel, "BACnetProtocolTunnel"},
        {zcl::ZclClusterId::AnalogInputBACnetRegular,
         "AnalogInputBACnetRegular"},
        {zcl::ZclClusterId::AnalogInputBACnetExtended,
         "AnalogInputBACnetExtended"},
        {zcl::ZclClusterId::AnalogOutputBACnetRegular,
         "AnalogOutputBACnetRegular"},
        {zcl::ZclClusterId::AnalogOutputBACnetExtended,
         "AnalogOutputBACnetExtended"},
        {zcl::ZclClusterId::AnalogValueBACnetRegular,
         "AnalogValueBACnetRegular"},
        {zcl::ZclClusterId::AnalogValueBACnetExtended,
         "AnalogValueBACnetExtended"},
        {zcl::ZclClusterId::BinaryInputBACnetRegular,
         "BinaryInputBACnetRegular"},
        {zcl::ZclClusterId::BinaryInputBACnetExtended,
         "BinaryInputBACnetExtended"},
        {zcl::ZclClusterId::BinaryOutputBACnetRegular,
         "BinaryOutputBACnetRegular"},
        {zcl::ZclClusterId::BinaryOutputBACnetExtended,
         "BinaryOutputBACnetExtended"},
        {zcl::ZclClusterId::BinaryValueBACnetRegular,
         "BinaryValueBACnetRegular"},
        {zcl::ZclClusterId::BinaryValyeBACnetExtended,
         "BinaryValyeBACnetExtended"},
        {zcl::ZclClusterId::MultistateInputBACnetRegular,
         "MultistateInputBACnetRegular"},
        {zcl::ZclClusterId::MultistateInputBACnetExtended,
         "MultistateInputBACnetExtended"},
        {zcl::ZclClusterId::MultistateOutputBACnetRegular,
         "MultistateOutputBACnetRegular"},
        {zcl::ZclClusterId::MultistateOutputBACnetExtended,
         "MultistateOutputBACnetExtended"},
        {zcl::ZclClusterId::MultistateValueBACnetRegular,
         "MultistateValueBACnetRegular"},
        {zcl::ZclClusterId::MultistateValueBACnetExtended,
         "MultistateValueBACnetExtended"},
        {zcl::ZclClusterId::_11073ProtocolTunnel, "11073ProtocolTunnel"},
        {zcl::ZclClusterId::ISO7818ProtocolTunnel, "ISO7818ProtocolTunnel"},
        {zcl::ZclClusterId::RetailTunnel, "RetailTunnel"},
        {zcl::ZclClusterId::Price, "Price"},
        {zcl::ZclClusterId::DemandResponseAndLoadControl,
         "DemandResponseAndLoadControl"},
        {zcl::ZclClusterId::Metering, "Metering"},
        {zcl::ZclClusterId::Messaging, "Messaging"},
        {zcl::ZclClusterId::Tunneling, "Tunneling"},
        {zcl::ZclClusterId::Information, "Information"},
        {zcl::ZclClusterId::Chatting, "Chatting"},
        {zcl::ZclClusterId::VoiceOverZigbee, "VoiceOverZigbee"},
        {zcl::ZclClusterId::EN50523ApplianceIdentification,
         "EN50523ApplianceIdentification"},
        {zcl::ZclClusterId::MeterIdentification, "MeterIdentification"},
        {zcl::ZclClusterId::EN50523ApplianceEventsAndAlerts,
         "EN50523ApplianceEventsAndAlerts"},
        {zcl::ZclClusterId::EN50523ApplianceStatistics,
         "EN50523ApplianceStatistics"},
        {zcl::ZclClusterId::ElectricalMeasurement, "ElectricalMeasurement"},
        {zcl::ZclClusterId::Diagnostics, "Diagnostics"},
        {zcl::ZclClusterId::TouchlinkCommissioning, "TouchlinkCommissioning"},

    };
  }
};
#endif  // _ZCL_ZCL_STRING_ENUM_H_
